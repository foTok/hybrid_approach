"""
this file reads data generated by bpsk_navigate
and transfers them so that could be used by diagnoser
"""

import os
import numpy as np

def read_data(file_name, step_len=None, split_point=None):
    """
    read data, and re-organise them
    """
    sig = np.load(file_name)
    split_point = int(len(sig) / 2) if split_point is None else split_point
    step_len = 100 if step_len is None else step_len
    #normal data
    normal = []
    for i in range(split_point - step_len):
        normal.append(sig[i:i+step_len, :].T)
    #fault data
    fault = []
    for i in range(split_point, len(sig)-step_len):
        fault.append(sig[i:i+step_len, :].T)

    return normal, fault

def get_file_list(path):
    """
    get all files in a path
    """
    str_path = str(path)
    if str_path == "":
        return []
    path = path.replace("/", "\\")
    if path[-1] != "\\":
        path = path+"\\"
    list_items = os.listdir(path)
    list_files = [x  for x in list_items if os.path.isfile(path+x)]
    return list_files

def para2name(usage, opt,lr, momentum, weight_decay, epoch):
    the_name = "usage={},opt={},lr={},momentum={},weight_decay={},epoch={}.pkl".format(usage, opt,lr, momentum, weight_decay, epoch)
    return the_name
